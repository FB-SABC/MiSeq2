#!/bin/bash


# 	This is a master workflow that will perform:
#	1) Merging of illumina paired reads
#	2) Quality filtering of sequence data
#	3) Trimming of primer sequences and distal bases and removal of sequences without 100% correct primer sequences
#	4) Renaming files with USEARCH labels "barcodelabel=sample_id;sequence_id"
#	5) Removing singletons
#	6) OTU clusting with UPARSE
#	7) Chimera detection and filtering
#

##########################################################################################
#	Input raw unmerged filenames must be "sample_id_SXXX_L001_R1_001.fastq" and "sample_id_SXXX_L001_R2_001.fastq" 
#	and all deposited in a directory specified by the $"raw_data" variable. "SXXX" is the sample number given by the sequencer
#	in the order you entered them in the Sample Sheet.
#
#	Two python scripts and a ref db are also needed to complete this workflow. These should be in the directory you are  launching this shell from.
#	1) uc2otutab.py 
#	2) fasta_number.py
#	3) gold.fa
##########################################################################################

# Enter raw data directorry
raw_data="raw_data"

# Enter directory for merged output
merged_data="merged_data"

# Enter minimum merge overlap - 50 bp minimum
overlap="50"

# Enter directory for quality filtered output
QF="QF"

# Enter % expected error rate threchold for seq quality filtering (1% = 0.01)
error_rate="0.01"

# Enter directory for trimmed data
trimmed_data="QF_trimmed"

# Enter FWD primer sequence 5'-3'
fwd_primer="AGTGACAAGAAATAACAATACAGG"

# Enter REV primer sequence 5'-3'
rev_primer="CCTGCTTTAAGCACTCTAATTTTC"

# Enter number of primer missmatches allowed
pcr_missmatches="0"

# Enter directory for labeled data
labeled_data="QF_trimmed_labeled"

# Enter directory for derep data
derep_dir="derep_dir"

# Enter directory for singleton filtered data
SF="SF"

# Enter max replicate cluster size (eg. to remove singletons enter 1, for duplicates enter 2)
maxsize="1"

# Enter directory for OTUs
OTUs="OTUs"


##########################################################################################
mkdir ${merged_data}
mkdir working1


		echo %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		echo Merging paried illumina sequences
		echo %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		echo ""

for file1 in ${raw_data}/*R1_001.fastq
do
		echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		echo Merging reads.
		echo forward reads are:
		echo $(basename ${file1})
		echo reverse reads are:
		echo $(basename ${file1} R1_001.fastq)R2_001.fastq
usearch8 -fastq_mergepairs ${file1} -reverse "${raw_data}/$(basename -s R1_001.fastq ${file1})R2_001.fastq" -fastqout "working1/$(basename "$file1")" -fastq_minovlen ${overlap}
done

for file2 in working1/*.fastq
do
rename="$(basename ${file2} _L001_R1_001.fastq).fastq"
mv ${file2} ${merged_data}/${rename}
done

rm -r working1

		echo Complete
	
	
		echo %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		echo Quality control using usearch fastq_filter maxee_rate=${error_rate}
		echo %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		echo ""

mkdir ${QF}

for file3 in ${merged_data}/*.fastq
do
		echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		echo ""
		echo Quality control
		echo ${file3}
		echo ""
usearch8 -fastq_filter ${file3} -fastaout "${QF}/$(basename "$file3" .fastq).fasta" -fastq_maxee_rate ${error_rate}
		echo ""
done


		echo %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		echo Triming primers and distal bases
		echo %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	
	
# This step can take .fastq input but can only output .fasta - so must be done after QF.

mkdir ${trimmed_data}
mkdir seqs_w_fwd_primer
mkdir seqs_wo_fwd_primer
mkdir seqs_w_fwd_and_rev_primer
mkdir seqs_w_fwd_butnot_rev_primer

echo ">fwd_primer" > fwd_primer_db.fasta
echo ${fwd_primer} >> fwd_primer_db.fasta

echo ">rev_primer" > rev_primer_db.fasta
echo ${rev_primer} >> rev_primer_db.fasta

echo ">fwd_primer" > both_primers_db.fasta
echo ${fwd_primer} >> both_primers_db.fasta
echo ">rev_primer" >> both_primers_db.fasta
echo ${rev_primer} >> both_primers_db.fasta

for file4 in ${QF}/*.fasta
do
echo ${file4}
usearch8 -search_oligodb ${file4} -db fwd_primer_db.fasta -strand both -matched "seqs_w_fwd_primer/$(basename ${file4})" -notmatched "seqs_wo_fwd_primer/$(basename ${file4})" 	
done

for file5 in seqs_w_fwd_primer/*.fasta
do
echo ${file5}
usearch8 -search_oligodb ${file5} -db rev_primer_db.fasta -strand both -matched "seqs_w_fwd_and_rev_primer/$(basename ${file5})" -notmatched "seqs_w_fwd_butnot_rev_primer/$(basename ${file5})"
done
	
for file6 in seqs_w_fwd_and_rev_primer/*.fasta
do
echo ${file6}
usearch8 -search_pcr ${file6} -db both_primers_db.fasta -strand both -maxdiffs ${pcr_missmatches} -pcr_strip_primers -ampout "${trimmed_data}/$(basename ${file6} .fasta).fasta"
done

rm -r seqs_w_fwd_primer
rm -r seqs_wo_fwd_primer
rm -r seqs_w_fwd_and_rev_primer
rm -r seqs_w_fwd_butnot_rev_primer


# For this script to run correctly input fasta label must be formatted >sequence_id, and filename must be sample_id.fasta.
# Result will be ">barcodelabel=sample_id;sequenceid"

		echo ""
		echo %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		echo Renameing sequences with ">barcodelabel=sample_id;sequence_id"
		echo %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

mkdir ${labeled_data}
mkdir working2


# 1 Remove ">" from start of sequence_ID

for file7 in ${trimmed_data}/*.fasta
do
sed -e 's/>/>barcodelabel=;/g' ${file7} > working2/$(basename "$file7" .fasta).txt 
done

# 2 Add sample_ID (should be filename) to produce ">barcodelabel=sample_ID;sequence_ID"

for file8 in working2/*.txt 
do
sample_id=$(basename ${file8} .txt)
echo ${sample_id}
sed -e "s/;/${sample_id};/g" ${file8} > "${labeled_data}/$(basename "$file8" .txt).fasta"
done
  
rm -r working2

		echo ""
		echo %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		echo Removing low abundant seqs per sample
		echo %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		echo ""
		echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

mkdir ${derep_dir}
mkdir ${SF}
mkdir working3
mkdir working4
mkdir working5

#Step 1

for file9 in ${labeled_data}/*.fasta
do
		echo ""
		echo Removing singletons step 1: derep_fulllength
		echo input is:
		echo ${file9}
	
usearch8 -derep_fulllength ${file9} -fastaout "${derep_dir}/$(basename "$file9" .fasta).fasta" -sizeout
		
		echo""
		echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
done
	
#Step2

for file10 in ${derep_dir}/*.fasta
do
		echo Removing singletons step 2: sorting uniques
		echo input is:
		echo ${file10}
		
usearch8 -sortbysize ${file10} -fastaout "working3/$(basename "$file10" .fasta).fasta" -maxsize ${maxsize}
		
		echo ""
		echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
done
	
#Step3

for file11 in working3/*.fasta
do
		echo ""
		echo Removing singletons step 3: ontaining singleton sequence names
		echo input is:
		echo ${file11}
		
grep "^>" ${file11} > "working4/$(basename "$file11" .fasta).txt"
		
		echo ""
		echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
done

rm working4/'*.txt'

#Step4

for file12 in working4/*.txt
do
		echo ""
		echo Removing singletons step 4: formatting singleton seq names 
		echo input is:
		echo ${file12}
		echo ""
sed -e 's/;size=1;//g' -e 's/>//g' ${file12} > "working5/$(basename "$file12" .txt).txt"
	
		echo ""
		echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
done

rm working5/'*.txt'

#Step5 Removing singleton sequences from data


for file13 in ${labeled_data}/*.fasta
	do
		echo ""
		echo Removing singletons step 5: removing singletons seqs 
		echo input is:
		echo ${file13}
		echo ""
usearch8 -fastx_getseqs	${file13} -labels "working5/$(basename "$file13" .fasta).txt" -notmatched "${SF}/$(basename "$file13" .fasta).fasta"
		
		echo ""
		echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	done
	
rm -r working3
rm -r working4
rm -r working5

		echo ""
		echo %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		echo OTU clustering and chimera detection
		echo %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		echo ""
		echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		echo ""
		echo Concatenating QF-SF data together
		echo""

mkdir ${OTUs}

cat ${SF}/*.fasta > ${OTUs}/all_samples_QF_no_singletons.fasta

		echo Derep unique seqs
		

usearch8 -derep_fulllength ${OTUs}/all_samples_QF_no_singletons.fasta -fastaout ${OTUs}/derep.fasta -sizeout

		echo ""
		echo Sorting unique seqs

usearch8 -sortbysize ${OTUs}/derep.fasta -fastaout ${OTUs}/derep_sortbysize.fasta -maxsize ${maxsize}

		echo ""
		echo Clustering OTUs

usearch8 -cluster_otus ${OTUs}/derep_sortbysize.fasta -otus ${OTUs}/otu_rep_seqs.fasta -uc ${OTUs}/otu_clustering_uc_map.txt

		echo ""
		echo Detecting and removing chimeric OTUs

#usearch8 -uchime_ref ${OTUs}/otu_rep_seqs.fasta -db gold.fa -strand plus -nonchimeras ${OTUs}/otu_rep_seqs_chimeras_filtered.fasta
#
		echo ""
		echo Numbering OTUs

python fasta_number.py ${OTUs}/otu_rep_seqs.fasta OTU_ > ${OTUs}/final_otus.fasta

		echo ""
		echo Creating OTU map

usearch8 -usearch_global ${OTUs}/all_samples_QF_no_singletons.fasta -db ${OTUs}/final_otus.fasta -strand plus -id 0.97 -uc ${OTUs}/final_otus_uc_map.txt

		echo ""
		echo Creating final OTU table
		echo""

python uc2otutab.py ${OTUs}/final_otus_uc_map.txt > ${OTUs}/otu_table.txt


		echo ""
		echo Complete
		echo Script written by Alexander W. Gofton, 2017
